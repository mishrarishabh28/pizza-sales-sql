--Retrieve the total number of orders placed. 
SELECT COUNT(*)
FROM orders 

--Calculate the total revenue generated from pizza sales.
SELECT SUM(order_detail.quantity*pizza.price) AS Sales
FROM order_detail
JOIN pizza
ON order_detail.pizza_id = pizza.pizza_id   

--Identify the highest-priced pizza.
SELECT pizza.pizza_type_id,pizza_types.name_1,pizza.price
FROM pizza
JOIN pizza_types
ON pizza.pizza_type_id = pizza_types.pizza_type_id
ORDER BY price DESC
LIMIT 1  

--Identify the most common pizza size ordered
SELECT pizza.size_1,COUNT(*) as size_order
FROM order_detail
JOIN pizza
ON order_detail.pizza_id = pizza.pizza_id
GROUP BY pizza.size_1
ORDER BY size_order DESC
LIMIT 1  

--Join the necessary tables to find the total quantity of each pizza category ordered.
SELECT pizza_types.category,SUM(order_detail.quantity)
FROM order_detail
JOIN pizza
ON order_detail.pizza_id = pizza.pizza_id                                                                                                                          
JOIN pizza_types
ON pizza_types.pizza_type_id = pizza.pizza_type_id   

--Determine the distribution of orders by hour of the day
SELECT extract(hour from time_1),count(*)
from orders
group by extract(hour from time_1)
GROUP BY pizza_types.category  

--Join relevant tables to find the category-wise distribution of pizzas.
select category,count(*)
from pizza_types
group by category 

--Group the orders by date and calculate the average number of pizzas ordered per day.
with my_cte as(
select orders.date_1,sum(order_detail.quantity) as each_day
from orders
join order_detail
on orders.order_id = order_detail.order_id
group by orders.date_1)
select round(avg(each_day))
from my_cte

--Determine the top 3 most ordered pizza types based on revenue.
select pizza_types.name_1, sum(order_detail.quantity*pizza.price) as revenue 
from pizza
join pizza_types
on pizza.pizza_type_id = pizza_types.pizza_type_id
join order_detail
on order_detail.pizza_id = pizza.pizza_id
group by pizza_types.name_1
order by revenue desc
limit 3

--Calculate the percentage contribution of each pizza type to total revenue.
with my_cte as(
select pizza_types.category, 
sum(order_detail.quantity*pizza.price)/(select sum(order_detail.quantity*pizza.price) as total_sales 
from order_detail
join pizza
on order_detail.pizza_id = pizza.pizza_id)*100 as revenue 
from pizza
join pizza_types
on pizza.pizza_type_id = pizza_types.pizza_type_id
join order_detail
on order_detail.pizza_id = pizza.pizza_id
group by pizza_types.category)
select category,round(revenue)
from my_cte 

--Analyze the cumulative revenue generated over time.
with my_cte as(
select orders.date_1,sum(order_detail.quantity*pizza.price) as revenue
from orders
join order_detail
on orders.order_id = order_detail.order_id
join pizza
on pizza.pizza_id = order_detail.pizza_id
group by orders.date_1 )
select date_1,revenue,sum(revenue) over(order by date_1)
from my_cte

--Determine the rank of ordered pizza types based on revenue for each pizza category.
with my_cte as(
select pizza_types.category,pizza_types.name_1, sum(order_detail.quantity*pizza.price) as revenue 
from pizza
join pizza_types
on pizza.pizza_type_id = pizza_types.pizza_type_id
join order_detail
on order_detail.pizza_id = pizza.pizza_id
group by pizza_types.category,pizza_types.name_1)

select *,rank() over(partition by category order by revenue) as rn
from my_cte
